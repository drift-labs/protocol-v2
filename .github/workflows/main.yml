name: Main CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

defaults:
  run:
    shell: bash
    working-directory: .

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: '1.65.0'
  SOLANA_VERSION: '1.13.2'

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        run: rustup toolchain install ${{ env.RUST_TOOLCHAIN }} --component rustfmt

      - name: Run Format
        run: cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        run: rustup toolchain install ${{ env.RUST_TOOLCHAIN }} --component clippy

      - name: Cache build files
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy
        run: cargo clippy -- -D warnings --allow=clippy::bool-to-int-with-if --allow=clippy::result-large-err

  unit:
    name: Unit & Coverage tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache build artefacts
        uses: Swatinem/rust-cache@v2
        with:
          cache-directories: .cargo/bin/cargo-tarpaulin
        
      - name: Install Rust
        run: rustup toolchain install ${{ env.RUST_TOOLCHAIN }}
        
      - name: install tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Run unit tests
        run: cargo tarpaulin -p drift --run-types Lib --color always --timeout 120 --out Xml
  
  anchor-tests:
    name: Anchor tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        run: rustup toolchain install ${{ env.RUST_TOOLCHAIN }}

      - name: Cache build artefacts
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"
      
      - name: Setup Solana
        uses: ./.github/actions/setup-solana/

      - name: install anchor cli
        run: cargo install --git https://github.com/coral-xyz/anchor --tag v0.25.0 anchor-cli --locked

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup yarn
        run: npm install -g yarn

      - name: Install yarn
        run: yarn

      - name: install typescript
        run: npm install typescript -g

      - name: install mocha
        run: |
          npm install ts-mocha -g
          npm install --global mocha

      - name: build sdk
        run: cd sdk/ && yarn && yarn build && cd ..

#      - name: run anchor tests
#        run: bash test-scripts/run-anchor-tests.sh
  
  yarn-prettier:
    name: Run prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install yarn
        run: yarn

      - name: Run prettier
        run: yarn prettify
  
  yarn-lint:
    name: Run eslint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install yarn
        run: yarn

      - name: Run lint
        run: yarn lint
  
  sca:
    name: Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Report all vulnerabilities in CI output
      - name: Report all vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          hide-progress: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      # Fail the job on critical vulnerabiliies with fix available
      - name: Fail critical vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          hide-progress: true
          format: 'table'
          severity: 'CRITICAL'
          exit-code: '1'

      - name: Upload scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  sast:
    name: Static Security Tests
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialise CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Run CodeQL
        uses: github/codeql-action/analyze@v2

  rust-pass:
      name: Rust tests pass
      needs: ['format', 'clippy', 'unit', 'anchor-tests']
      runs-on: ubuntu-latest
      steps:
        - run: echo ok

  yarn-pass:
      name: Yarn tests pass
      needs: ['yarn-prettier', 'yarn-lint']
      runs-on: ubuntu-latest
      steps:
        - run: echo ok

  security-pass:
      name: Security tests pass
      needs: ['sca', 'sast']
      runs-on: ubuntu-latest
      steps:
        - run: echo ok

  all-pass:
      name: All tests pass ðŸš€
      needs: ['rust-pass', 'yarn-pass', 'security-pass']
      runs-on: ubuntu-latest
      steps:
        - run: echo ok

#  check-for-sdk-changes:
#    runs-on: ubuntu-latest
#    # Set job outputs to values from filter step
#    outputs:
#      sdk: ${{ steps.filter.outputs.sdk }}
#    steps:
#      # For pull requests it's not necessary to checkout the code
#      - uses: actions/checkout@v2
#      - uses: dorny/paths-filter@v2
#        id: filter
#        with:
#          filters: |
#            sdk:
#              - 'sdk/src/**'
#  release:
#    runs-on: ubuntu-latest
#    needs: [fmt-clippy, unit, cargo-audit, yarn-prettier, yarn-lint, check-for-sdk-changes]
#    if: ${{ github.ref == 'refs/heads/master' && needs.check-for-sdk-changes.outputs.sdk == 'true' }}
#    defaults:
#      run:
#        working-directory: ./sdk
#    steps:
#      - uses: actions/checkout@v2
#      - name: Setup node
#        uses: actions/setup-node@v2
#        with:
#          node-version: '14.x'
#          registry-url: 'https://registry.npmjs.org'
#      - name: Build sdk
#        run: yarn
#      - run: yarn build
#      - name: Update package version
#        run: npm version prerelease --preid=master
#      - name: Git commit
#        run: |
#          VERSION=$(node -e "console.log(require('./package.json').version);")
#          git config user.name "GitHub Actions"
#          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
#          git add .
#          git commit -a -m "sdk: release v$VERSION"
#          git push origin HEAD
#      - name: Publish to npm
#        run: npm publish --access=public
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
